const defaultPngCompressionOptions = {
  compressionLevel: 9,
  quality: 60
};
const defaultPngOptions = {
  transparent: { padding: 0.05, resizeOptions: { fit: "contain", background: "transparent" } },
  maskable: { padding: 0.3, resizeOptions: { fit: "contain", background: "white" } },
  apple: { padding: 0.3, resizeOptions: { fit: "contain", background: "white" } }
};
function toResolvedSize(size) {
  return {
    original: size,
    width: typeof size === "number" ? size : size.width,
    height: typeof size === "number" ? size : size.height
  };
}
function toResolvedAsset(type, asset) {
  return {
    padding: defaultPngOptions[type].padding,
    resizeOptions: defaultPngOptions[type].resizeOptions,
    ...asset,
    sizes: asset.sizes.map(toResolvedSize)
  };
}
function defaultAssetName(type, size) {
  switch (type) {
    case "transparent":
      return `pwa-${size.width}x${size.height}.png`;
    case "maskable":
      return `maskable-icon-${size.width}x${size.height}.png`;
    case "apple":
      return `apple-touch-icon-${size.width}x${size.height}.png`;
  }
}
function sameAssetSize(a, b) {
  if (typeof a === "number" && typeof b.original === "number")
    return a === b.original;
  if (typeof a !== "number" && typeof b.original !== "number")
    return a.width === b.width && a.height === b.height;
  return false;
}
function cloneResolvedAssetsSizes({ png, assetName, assets }) {
  return {
    assets: {
      transparent: cloneResolvedAssetSizes(assets.transparent),
      maskable: cloneResolvedAssetSizes(assets.maskable),
      apple: cloneResolvedAssetSizes(assets.apple)
    },
    png,
    assetName
  };
}
function cloneResolvedAssetSizes({ sizes, ...asset }) {
  return {
    ...asset,
    sizes: [...sizes]
  };
}

const appleSplashScreenSizes = {
  'iPad Pro 12.9"': { width: 2048, height: 2732, scaleFactor: 2 },
  'iPad Pro 11"': { width: 1668, height: 2388, scaleFactor: 2 },
  'iPad Pro 10.5"': { width: 1668, height: 2388, scaleFactor: 2 },
  'iPad Pro 9.7"': { width: 1536, height: 2048, scaleFactor: 2 },
  'iPad mini 7.9"': { width: 1536, height: 2048, scaleFactor: 2 },
  'iPad Air 10.5"': { width: 1668, height: 2224, scaleFactor: 2 },
  'iPad Air 9.7"': { width: 1536, height: 2048, scaleFactor: 2 },
  'iPad 10.2"': { width: 1620, height: 2160, scaleFactor: 2 },
  'iPad 9.7"': { width: 1536, height: 2048, scaleFactor: 2 },
  "iPhone 14 Pro Max": { width: 1290, height: 2796, scaleFactor: 3 },
  "iPhone 14 Pro": { width: 1179, height: 2556, scaleFactor: 3 },
  "iPhone 14 Plus": { width: 1284, height: 2778, scaleFactor: 3 },
  "iPhone 14": { width: 1170, height: 2532, scaleFactor: 3 },
  "iPhone 13 Pro Max": { width: 1284, height: 2778, scaleFactor: 3 },
  "iPhone 13 Pro": { width: 1170, height: 2532, scaleFactor: 3 },
  "iPhone 13": { width: 1170, height: 2532, scaleFactor: 3 },
  "iPhone 13 mini": { width: 1125, height: 2436, scaleFactor: 3 },
  "iPhone 12 Pro Max": { width: 1284, height: 2778, scaleFactor: 3 },
  "iPhone 12 Pro": { width: 1170, height: 2532, scaleFactor: 3 },
  "iPhone 12": { width: 1170, height: 2532, scaleFactor: 3 },
  "iPhone 12 mini": { width: 1125, height: 2436, scaleFactor: 3 },
  "iPhone 11 Pro Max": { width: 1242, height: 2688, scaleFactor: 3 },
  "iPhone 11 Pro": { width: 1125, height: 2436, scaleFactor: 3 },
  "iPhone 11": { width: 828, height: 1792, scaleFactor: 2 },
  "iPhone XS Max": { width: 1242, height: 2688, scaleFactor: 3 },
  "iPhone XS": { width: 1125, height: 2436, scaleFactor: 3 },
  "iPhone XR": { width: 828, height: 1792, scaleFactor: 2 },
  "iPhone X": { width: 1125, height: 2436, scaleFactor: 3 },
  "iPhone 8 Plus": { width: 1242, height: 2208, scaleFactor: 3 },
  "iPhone 8": { width: 750, height: 1334, scaleFactor: 2 },
  "iPhone 7 Plus": { width: 1242, height: 2208, scaleFactor: 3 },
  "iPhone 7": { width: 750, height: 1334, scaleFactor: 2 },
  "iPhone 6s Plus": { width: 1242, height: 2208, scaleFactor: 3 },
  "iPhone 6s": { width: 750, height: 1334, scaleFactor: 2 },
  "iPhone 6 Plus": { width: 1242, height: 2208, scaleFactor: 3 },
  "iPhone 6": { width: 750, height: 1334, scaleFactor: 2 },
  'iPhone SE 4.7"': { width: 750, height: 1334, scaleFactor: 2 },
  'iPhone SE 4"': { width: 640, height: 1136, scaleFactor: 2 },
  "iPod touch 5th generation and later": { width: 640, height: 1136, scaleFactor: 2 }
};
function defaultSplashScreenName(landscape, size, dark) {
  return `apple-splash-${landscape ? "landscape" : "portrait"}-${typeof dark === "boolean" ? dark ? "dark-" : "light-" : ""}${size.width}x${size.height}.png`;
}
const AllAppleDeviceNames = Array.from(Object.keys(appleSplashScreenSizes).map((k) => k));
function createAppleSplashScreens(options = {}, devices = AllAppleDeviceNames) {
  const {
    padding,
    resizeOptions,
    darkResizeOptions,
    linkMediaOptions,
    png,
    name
  } = options;
  return {
    sizes: devices.map((deviceName) => appleSplashScreenSizes[deviceName]),
    padding,
    resizeOptions,
    darkResizeOptions,
    linkMediaOptions,
    png,
    name
  };
}
function combinePresetAndAppleSplashScreens(preset, options = {}, devices = AllAppleDeviceNames) {
  return {
    ...preset,
    appleSplashScreens: createAppleSplashScreens(options, devices)
  };
}
function createAppleSplashScreenHtmlLink(size, landscape, addMediaScreen, xhtml, name = defaultSplashScreenName, basePath = "/", dark) {
  const { width, height, scaleFactor } = size;
  const tokens = [
    `(device-width: ${(landscape ? height : width) / scaleFactor}px)`,
    `(device-height: ${(landscape ? width : height) / scaleFactor}px)`,
    `(-webkit-device-pixel-ratio: ${scaleFactor})`,
    `(orientation: ${landscape ? "landscape" : "portrait"})`
  ];
  if (dark === true)
    tokens.unshift("(prefers-color-scheme: dark)");
  if (addMediaScreen)
    tokens.unshift("screen");
  return `<link rel="apple-touch-startup-image" media="${tokens.join(" and ")}" href="${basePath}${name(landscape, size, dark)}"${xhtml ? " /" : ""}>`;
}

export { AllAppleDeviceNames as A, defaultPngCompressionOptions as a, defaultPngOptions as b, appleSplashScreenSizes as c, defaultAssetName as d, defaultSplashScreenName as e, createAppleSplashScreens as f, combinePresetAndAppleSplashScreens as g, createAppleSplashScreenHtmlLink as h, cloneResolvedAssetsSizes as i, toResolvedSize as j, sameAssetSize as s, toResolvedAsset as t };
